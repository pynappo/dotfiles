## config Version: v12.12
##########################
## Keep steamtinkerlaunch open after game exit
KEEPSTLOPEN="0"
## Use Steam Linux Runtime requested by compatibility tool, if available - May need to be manually from Steam if unavailable
USESLR="1"
## Force Steam Linux Runtime if not available
FORCESLR="0"
## Use reaper command if available
USEREAP="1"
## Force reaper command if not available
FORCEREAP="0"
## Start the game with this Proton version
USEPROTON="GE-Proton9-25"
## Use compatdata depending on the Proton version - 'single-proton' for using compatdata per game and Proton version - 'global-proton' for using the same Proton version based compatdata globally for all games
REDIRCOMPDATA="disabled"
## Mode how to handle the steamuser directory on compatdata redirect
REDIRSTEAMUSER="disabled"
## Update Proton-GE automatically to the latest version
AUTOBUMPGE="0"
## Update Proton automatically to the latest version
AUTOBUMPPROTON="0"
## Use a custom command
USECUSTOMCMD="0"
## Start this custom command
CUSTOMCMD="echo"
## The command line arguments used for the custom command
CUSTOMCMD_ARGS="none"
## Only start the custom command and skip the regular game executable
ONLY_CUSTOMCMD="0"
## Fork the custom command into the background and continue starting with the regular game executable
FORK_CUSTOMCMD="0"
## passes tools like GameScope, GameMode and MangoHud to the custom command, if they are enabled
EXTPROGS_CUSTOMCMD="0"
## Run this custom command with Proton even if it is not detected as a Windows program
CUSTOMCMDFORCEWIN="0"
## Wait X seconds after having started the custom program before continuing with the game launch. 1 is only wait for the custom program pid
WAITFORCUSTOMCMD="0"
## Inject the custom command by starting it after the game executable is running - overrides 'ONLY_CUSTOMCMD' and 'FORK_CUSTOMCMD'
INJECT_CUSTOMCMD="0"
## Wait X seconds before starting the custom program after the game executable started
INJECTWAIT="0"
## Use IGCSInjector to inject a DLL into the running game executable
USEIGCS="0"
## Inject the UniversalUE4Unlocker with IGCSInjector
UUUSEIGCS="0"
## Wait X seconds before starting the IGCSInjector after the game executable started
IGCSWAIT="0"
## Automatically prepare and execute a UE4 console script on game launch
UUUSEPATCH="0"
## Wait X seconds before starting the UUU patch script after the game executable started
UUUPATCHWAIT="0"
## Prepare VR injection into compatible UE4 games using UniversalUE4Unlocker and IGCSInjector
UUUSEVR="0"
## The own/custom command line arguments used for the game
GAMEARGS="none"
## The command line arguments used for the game initially coming hardcoded from Steam - without effect when 'SORTGARGS' is disabled
HARDARGS="nope"
## Enable GameMode for this game
USEGAMEMODERUN="0"
## Enable gamescope for this game
USEGAMESCOPE="0"
## The command line arguments for gamescope for this game
GAMESCOPE_ARGS="--"
## Start the game through obs-gamecapture
USEOBSCAP="0"
## Enable Zink to renders OpenGL games in Vulkan
USEZINK="0"
## Set variables required for PrimeRun
USEPRIMERUN="0"
## Pause steamwebhelper on game launch and continue on game stop
TOGSTEAMWEBHELPER="0"
## Enable MangoHud for this game
USEMANGOHUD="1"
## Start the game using Mangoapp (enabling gamescope automatically)
USEMANGOAPP="0"
## The MangoHud binary used
MAHUBIN="/usr/bin/mangohud"
## The command line arguments used for MangoHud
MAHUARGS="none"
## Preload MangoHud using LD_PRELOAD
LDPMAHU="0"
## Set the MangoHud variable MANGOHUD to 1 and ignore other MangoHud settings
MAHUVAR="0"
## Use steamtinkerlaunch internal MangoHud config for this game
USEMANGOHUDSTLCFG="0"
## Start game with vkBasalt enabled
ENABLE_VKBASALT="0"
## Enable Nyrna for this game
RUN_NYRNA="0"
## Enable ReplaySorcery for this game
RUN_REPLAY="0"
## Start this game with the x64dbg debugger
RUN_X64DBG="0"
## Start this game with the GDB debugger
RUN_GDB="0"
## Enable Discord Rich Presence via wine-discord-ipc-bridge
USE_WDIB="0"
## Enable Vortex Mode
USEVORTEX="0"
## Timeout in seconds of the Vortex requester - 0 to disable it completely
WAITVORTEX="2"
## Enable Winetricks in Vortex Mode
RUN_VORTEX_WINETRICKS="0"
## Enable Winecfg in Vortex Mode
RUN_VORTEX_WINECFG="0"
## Allow changing the PulseAudio latency
CHANGE_PULSE_LATENCY="0"
## Change PulseAudio latency to n
STL_PULSE_LATENCY_MSEC="60"
## Minimize all visible windows on game start and restore them when game ends
TOGGLEWINDOWS="0"
## Start Winetricks GUI before the game starts
RUN_WINETRICKS="0"
## List of packages to install silently using Winetricks
WINETRICKSPAKS="none"
## Start winecfg before the game starts
RUN_WINECFG="0"
## Use Wine instead of Proton
USEWINE="0"
## Use wineconsole when the exe is a console program
USEWICO="0"
## The Wine Version to use with this game
WINEVERSION="echo"
## The default Wine version to be used when none is selected
WINEDEFAULT="echo"
## Start the game in Wine virtual desktop mode
VIRTUALDESKTOP="0"
## Resolution for the Wine virtual desktop
VDRES="none"
## Start the game using Boxtron/DOSBox
USEBOXTRON="0"
## Start the game using Roberta/ScummVM
USEROBERTA="0"
## Start the game using Luxtorpeda
USELUXTORPEDA="0"
## Allow registry changes for this game
REGEDIT="0"
## Enable stereoscopic geo11-driver for the selected game
USEGEOELF="0"
## Update geo-11 driver automatically when enabled
AUTOGEOELF="0"
## Install ReShade into the game directory
INSTALL_RESHADE="0"
## Use the Depth3D shader with ReShade
RESHADE_DEPTH3D="0"
## Start game with ReShade enabled
USERESHADE="0"
## Use ReShade with the custom command instead of the game - Will be ignored if Only Custom Command is enabled
CUSTOMCMDRESHADE="0"
## Update both ReShade download archive and dlls in gamedir automatically
RESHADEUPDATE="0"
## Toggle ReShade version override
RSOVRD="0"
## ReShade version to override gloabl version with
RSOVRVERS="5.4.2"
## Open menu on game launch to add or remove shaders for the game
CHOOSESHADERS="0"
## Alternative game exe path (f.e. for ReShade installation and the game launcher is in an extra directory)
ALTEXEPATH="/tmp"
## Check the architecture of this exe instead of the default one
ARCHALTEXE="/home/dle/.local/share/Steam/steamapps/common/Overwatch/echo"
## Enable FidelityFX Super Resolution (FSR) compatible OpenVR
USEOPENVRFSR="0"
## Start this game in VR in Side-by-Side Stereo3D mode
RUNSBSVR="0"
## The command line arguments for the Side-by-Side Stereo3D VR player for this game
VRVIDEOPLAYERARGS="--flat"
## The zoom value for the Stereo3D VR player window
SBSZOOM="1.0"
## Start this game in VR in Side-by-Side Stereo3D mode using geo-11
SBSVRGEOELF="0"
## Start this game in VR in Side-by-Side Stereo3D mode using Depth3D with ReShade
SBSVRRS="0"
## Start this game in Side-by-Side Stereo3D mode using Depth3D with ReShade
SBSRS="0"
## The minimal window height this game needs to be accepted for Stereo3D VR (f.e. to autoskip launchers)
MINVRWINH="640"
## Stereo3D VR - wait for this alternative exe to determine the PID
WAITFORTHISPID="none"
## Timeout in seconds of the initial requester - 0 to disable it completely
WAITEDITOR="2"
## Create steam_appid.txt file in gamedir if enabled or delete it if disabled
STEAMAPPIDFILE="0"
## Check if Steam collections the game belongs to have a corresponding tweak file
CHECKCOLLECTIONS="1"
## Backup non-empty steamuser directories from the game pfx
BACKUPSTEAMUSER="0"
## When is the steamuser data supposed to be restored from an existing backup
RESTORESTEAMUSER="none"
## symlink the steamuser directory
USESUSYM="0"
## symlink the steamuser directory globally to one directory
USEGLOBSUSYM="0"
## Use internal DXVK config for this game
USE_STLDXVKCFG="0"
## DXVK variables - see 'https://github.com/doitsujin/dxvk'
DXVK_HUD="0"
## Controls DXVK message logging
DXVK_LOG_LEVEL="none"
## The DXVK log path - 'none' for stdout
DXVK_LOG_PATH="STLCFGDIR/logs/dxvk"
## Scales the DXVK HUD by a factor of x (e.g. 1.5)
DXVK_SCALE="1.0"
## Uses DXVK to limit a game's framerate, default is game's internal framerate limit OR unlimited. NOTE: May conflict with Gamescope and/or other framerate limiters such as MangoHUD
DXVK_FPSLIMIT="none"
## Enable Dxvk async support
DXVK_ASYNC="0"
## Enable DXVK HDR support - requires compatible GPU and drivers
DXVK_HDR="0"
## Enable strace for this game
STRACERUN="0"
## The command line arguments for strace for this game
STRACEOPTS="-f -t -e trace=file"
## Enable network-monitor for this game
USENETMON="0"
## Reject internet access for the game
BLOCKINTERNET="0"
## Convenient method for dumping a useful debug log to
PROTON_LOG="0"
## The directory where the Proton logs are stored
PROTON_LOG_DIR="STLCFGDIR/logs/proton/id"
## Use the 'winedebug settings' also for Proton
USEWINEDEBUGPROTON="0"
## Write some useful debug scripts for the game into PROTON_DEBUG_DIR
PROTON_DUMP_DEBUG_COMMANDS="0"
## Root directory for the Proton debug scripts
PROTON_DEBUG_DIR="/tmp"
## Use OpenGL-based WineD3D instead of Vulkan-based DXVK for D3D11, D3D10 and D3D9
PROTON_USE_WINED3D="0"
## Disable d3d11.dll, for D3D11 games which can fall back to and run better with D3D9
PROTON_NO_D3D11="0"
## Disable d3d10.dll and dxgi.dll, for D3D10 games which can fall back to and run better with D3D9
PROTON_NO_D3D10="0"
## Do not use eventfd-based in-process synchronization primitives
PROTON_NO_ESYNC="0"
## Do not use futex-based in-process synchronization primitives
PROTON_NO_FSYNC="0"
## Use Winesync instead of esync/fsync. The winesync kernel module and a compatible Proton need to be used.
ENABLE_WINESYNC="0"
## Proton support for Nvidia's NVAPI GPU support library and DLSS
PROTON_ENABLE_NVAPI="0"
## Proton hide Nvidia GPU
PROTON_HIDE_NVIDIA_GPU="1"
## Enable all options required for DLSS
USEDLSS="0"
## When enabled, VKD3D_CONFIG is exported as 'dxr11' and '-dx12' is appended to the game command line parameters
USERAYTRACING="0"
## Force Wine to enable the LARGE_ADDRESS_AWARE flag
PROTON_FORCE_LARGE_ADDRESS_AWARE="1"
## Enable Wine fullscreen integer scaling for this game
WINE_FULLSCREEN_INTEGER_SCALING="0"
## Enable FidelityFX Super Resolution (FSR) - a compatible Proton version needs to be selected separately
WINE_FULLSCREEN_FSR="0"
## FSR sharpening strength
WINE_FULLSCREEN_FSR_STRENGTH="2"
## Cleanup Proton Temp directory 'drive_c/users/steamuser/Temp' on exit
CLEANPROTONTEMP="0"
## The WINEDEBUG settings for direct Wine calls for this game
STLWINEDEBUG="-all"
## Wine DLL overrides used for this game
STLWINEDLLOVERRIDES="none"
## The directory for storing Wine logs
WINE_LOG_DIR="STLCFGDIR/logs/wine"
## Custom user script executed when a game starts
USERSTART="/home/dle/.local/share/Steam/steamapps/common/Overwatch/echo"
## Custom user script executed when a game stops
USERSTOP="/home/dle/.local/share/Steam/steamapps/common/Overwatch/echo"
## Automatically use Conty if the game exe is 32bit
AUTOCONTY="0"
## Explicitely use Conty for the game
USECONTY="0"
## Open requester after the game exited in less than X seconds
CRASHGUESS="60"
## Open only a wineconsole in the game directory instead of the game
ONLYWICO="0"
## Change the screen resolution to this value before the game starts
GAMESCREENRES="none"
## Default Help URL
HELPURL="none"
## Desktop Icon Mode
CREATEDESKTOPICON="0"
## Fix symlinks pointing to a Proton version unlike the current one
FIXSYMLINKS="0"
## Replace 'windows system file' symlinks in the current WINEPREFIX with the original files they are pointing to
UNSYMLINK="0"
## Delete the compatdata dirextory before game launch, so Steam recreates it automatically updated
DELPFX="0"
## Start this game with the DLL debugger Dependencies
RUN_DEPS="0"
## Sort game command arguments and make hardcoded arguments writable
SORTGARGS="0"
## Timeout in seconds for the Mod Organizer 2 requester - 0 to disable it completely
WAITMO2="2"
## Mod Organizer 2 mode
MO2MODE="disabled"
## Enable Special K for the selected game
USESPECIALK="0"
## enables native Wayland support for SDL games that support it with SDL_VIDEODRIVER=wayland
SDLUSEWAYLAND="0"
## A comma-separated list of named flags, which can be used to enable experimental driver features and performance enhancements for RADV Vulkan driver
STLRAD_PFTST="none"
## Special K download version
SPEKVERS="default"
## Update SpecialK automatically when using 'default or 'latest' version'
AUTOSPEK="0"
## Use FlawlessWidescreen for the game
USEFWS="0"
## Store game exe data using 'peldd'
USEPEV_PELDD="0"
## Store game exe data using 'pepack'
USEPEV_PEPACK="0"
## Store game exe data using 'peres'
USEPEV_PERES="0"
## Store game exe data using 'pescan'
USEPEV_PESCAN="0"
## DESC_USEPEV_PESEC
USEPEV_PESEC="0"
## Store game exe data using 'pestr'
USEPEV_PESTR="0"
## Store game exe data using 'readpe'
USEPEV_READPE="0"
## A list of options that change the behavior of VKD3D-Proton
STL_VKD3D_CONFIG="none"
## Controls the debug level for log messages produced by VKD3D-Proton
STL_VKD3D_DEBUG="none"
## controls the debug level for log messages produced by the shader compilers
STL_VKD3D_SHADER_DEBUG="none"
## If set, redirects VKD3D_DEBUG logging output to a file instead
STL_VKD3D_LOG_FILE="none"
## A zero-based device index. Use to force the selected Vulkan device
STL_VKD3D_VULKAN_DEVICE="none"
## Skips devices that don't include this substring
STL_VKD3D_FILTER_DEVICE_NAME="none"
## A list of Vulkan extensions that VKD3D-Proton should not use even if available
STL_VKD3D_DISABLE_EXTENSIONS="none"
## Enables additional debug messages in tests
STL_VKD3D_TEST_DEBUG="0"
## A filter string. Only the tests whose names matches the filter string will be run, e.g. VKD3D_TEST_FILTER=clear_render_target. Useful for debugging or developing new tests
STL_VKD3D_TEST_FILTER="none"
## Excludes tests of which the name is included in the string, e.g. VKD3D_TEST_EXCLUDE=test_root_signature_priority,test_conservative_rasterization_dxil
STL_VKD3D_TEST_EXCLUDE="none"
## The test platform controls the behavior of todo(), todo_if(), bug_if() and broken() conditions in tests
STL_VKD3D_TEST_PLATFORM="none"
## Set to 0 to disable bug_if() conditions in tests
STL_VKD3D_TEST_BUG="none"
## If profiling is enabled in the build, a profiling block is emitted to .
STL_VKD3D_PROFILE_PATH="/home/dle/.local/share/Steam/steamapps/common/Overwatch/none"
SLOARGS="none"
